{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Toolbar } from '@material-ui/core';\nexport const useStyles = makeStyles(theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: theme.drawerWidth,\n    width: `calc(100% - ${theme.drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    [theme.breakpoints.up('lg')]: {\n      marginLeft: 0\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: '100%'\n    }\n  },\n  menuButton: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  hide: {\n    display: 'none'\n  },\n  toolbar: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1)\n  }, theme.mixins.toolbar)\n}));\nexport const StyledToolbar = styled(Toolbar)`\n  && {\n    .MuiSvgIcon-root {\n      color: #726ec1;\n      background: -webkit-linear-gradient(rgba(114,110,193,1), rgba(220,219,241,1));\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n`;\nexport const StyledToolbarContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  /* background: #222; */\n\n  img {\n    height: 40px;\n\n    @media screen and (max-width: ${props => props.theme.breakpoints.values.sm}px) {\n      height: 20px;\n    }\n  }\n\n  h4 {\n    color: #726ec1;\n    background: -webkit-linear-gradient(rgba(114,110,193,1), rgba(220,219,241,1));\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    font-family: 'DejaVu Sans Bold';\n\n    @media screen and (max-width: ${props => props.theme.breakpoints.values.sm}px) {\n      font-size: 16px;\n    }\n  }\n`;","map":null,"metadata":{},"sourceType":"module"}