{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/laferu/projetos/swipe/Platina-the-Wolf/components/ListItemLink.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useMemo, forwardRef } from 'react';\nimport Link from 'next/link';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nfunction ListItemLink(props) {\n  const {\n    icon,\n    primary,\n    href\n  } = props;\n  const CustomLink = useMemo(() => /*#__PURE__*/forwardRef((linkProps, ref) => /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({\n    ref: ref,\n    href: href\n  }, linkProps), {}, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this)), [href]);\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    button: true,\n    component: CustomLink,\n    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: primary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\nexport default ListItemLink;","map":{"version":3,"sources":["/home/laferu/projetos/swipe/Platina-the-Wolf/components/ListItemLink.js"],"names":["useMemo","forwardRef","Link","ListItem","ListItemIcon","ListItemText","ListItemLink","props","icon","primary","href","CustomLink","linkProps","ref"],"mappings":";;;;;;;;;;AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA0BH,KAAhC;AAEA,QAAMI,UAAU,GAAGX,OAAO,CACxB,mBACEC,UAAU,CAAC,CAACW,SAAD,EAAYC,GAAZ,kBACT,QAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,GAAX;AAAgB,IAAA,IAAI,EAAEH;AAAtB,KAAgCE,SAAhC;AAAA,2BACE;AADF;AAAA;AAAA;AAAA;AAAA,UADQ,CAFY,EAOxB,CAACF,IAAD,CAPwB,CAA1B;AAUA,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,SAAS,EAAEC,UAA5B;AAAA,4BACE,QAAC,YAAD;AAAA,gBAAeH;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AAED,eAAeH,YAAf","sourcesContent":["import { useMemo, forwardRef } from 'react'\nimport Link from 'next/link'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nfunction ListItemLink(props) {\n  const { icon, primary, href } = props\n\n  const CustomLink = useMemo(\n    () =>\n      forwardRef((linkProps, ref) => (\n        <Link ref={ref} href={href} {...linkProps}>\n          <></>\n        </Link>\n      )),\n    [href]\n  );\n\n  return (\n    <ListItem button component={CustomLink}>\n      <ListItemIcon>{icon}</ListItemIcon>\n      <ListItemText primary={primary} />\n    </ListItem>\n  )\n}\n\nexport default ListItemLink\n"]},"metadata":{},"sourceType":"module"}