{"ast":null,"code":"var PIXI;\n\n(function (PIXI) {\n  var tilemap;\n\n  (function (tilemap) {\n    var CanvasTileRenderer = function () {\n      function CanvasTileRenderer(renderer) {\n        this.tileAnim = [0, 0];\n        this.dontUseTransform = false;\n        this.renderer = renderer;\n        this.tileAnim = [0, 0];\n      }\n\n      return CanvasTileRenderer;\n    }();\n\n    tilemap.CanvasTileRenderer = CanvasTileRenderer;\n    PIXI.CanvasRenderer.registerPlugin('tilemap', CanvasTileRenderer);\n  })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\n})(PIXI || (PIXI = {}));\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar PIXI;\n\n(function (PIXI) {\n  var tilemap;\n\n  (function (tilemap) {\n    var CompositeRectTileLayer = function (_super) {\n      __extends(CompositeRectTileLayer, _super);\n\n      function CompositeRectTileLayer(zIndex, bitmaps, useSquare, texPerChild) {\n        var _this = _super.call(this) || this;\n\n        _this.shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n        _this.modificationMarker = 0;\n        _this._globalMat = null;\n        _this._tempScale = null;\n\n        _this.initialize.apply(_this, arguments);\n\n        return _this;\n      }\n\n      CompositeRectTileLayer.prototype.updateTransform = function () {\n        _super.prototype.displayObjectUpdateTransform.call(this);\n      };\n\n      CompositeRectTileLayer.prototype.initialize = function (zIndex, bitmaps, useSquare, texPerChild) {\n        this.z = this.zIndex = zIndex;\n        this.useSquare = useSquare;\n        this.texPerChild = texPerChild || 16;\n\n        if (bitmaps) {\n          this.setBitmaps(bitmaps);\n        }\n      };\n\n      CompositeRectTileLayer.prototype.setBitmaps = function (bitmaps) {\n        var texPerChild = this.texPerChild;\n        var len1 = this.children.length;\n        var len2 = Math.ceil(bitmaps.length / texPerChild);\n        var i;\n\n        for (i = 0; i < len1; i++) {\n          this.children[i].textures = bitmaps.slice(i * texPerChild, (i + 1) * texPerChild);\n        }\n\n        for (i = len1; i < len2; i++) {\n          this.addChild(new tilemap.RectTileLayer(this.zIndex, bitmaps.slice(i * texPerChild, (i + 1) * texPerChild)));\n        }\n      };\n\n      CompositeRectTileLayer.prototype.clear = function () {\n        for (var i = 0; i < this.children.length; i++) {\n          this.children[i].clear();\n        }\n\n        this.modificationMarker = 0;\n      };\n\n      CompositeRectTileLayer.prototype.addRect = function (num, u, v, x, y, tileWidth, tileHeight) {\n        if (this.children[num] && this.children[num].textures) this.children[num].addRect(0, u, v, x, y, tileWidth, tileHeight);\n      };\n\n      CompositeRectTileLayer.prototype.addFrame = function (texture_, x, y, animX, animY) {\n        var texture;\n        var layer = null,\n            ind = 0;\n        var children = this.children;\n\n        if (typeof texture_ === \"number\") {\n          var childIndex = texture_ / this.texPerChild >> 0;\n          layer = children[childIndex];\n\n          if (!layer) {\n            layer = children[0];\n\n            if (!layer) {\n              return false;\n            }\n\n            ind = 0;\n          } else {\n            ind = texture_ % this.texPerChild;\n          }\n\n          texture = layer.textures[ind];\n        } else if (typeof texture_ === \"string\") {\n          texture = PIXI.Texture.fromImage(texture_);\n        } else {\n          texture = texture_;\n\n          for (var i = 0; i < children.length; i++) {\n            var child = children[i];\n            var tex = child.textures;\n\n            for (var j = 0; j < tex.length; j++) {\n              if (tex[j].baseTexture == texture.baseTexture) {\n                layer = child;\n                ind = j;\n                break;\n              }\n            }\n\n            if (layer) {\n              break;\n            }\n          }\n\n          if (!layer) {\n            for (i = 0; i < children.length; i++) {\n              var child = children[i];\n\n              if (child.textures.length < this.texPerChild) {\n                layer = child;\n                ind = child.textures.length;\n                child.textures.push(texture);\n                break;\n              }\n            }\n\n            if (!layer) {\n              children.push(layer = new tilemap.RectTileLayer(this.zIndex, texture));\n              ind = 0;\n            }\n          }\n        }\n\n        layer.addRect(ind, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n        return true;\n      };\n\n      ;\n\n      CompositeRectTileLayer.prototype.renderCanvas = function (renderer) {\n        if (!renderer.plugins.tilemap.dontUseTransform) {\n          var wt = this.worldTransform;\n          renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n        }\n\n        var layers = this.children;\n\n        for (var i = 0; i < layers.length; i++) {\n          layers[i].renderCanvas(renderer);\n        }\n      };\n\n      ;\n\n      CompositeRectTileLayer.prototype.renderWebGL = function (renderer) {\n        var gl = renderer.gl;\n        var shader = renderer.plugins.tilemap.getShader(this.useSquare);\n        renderer.setObjectRenderer(renderer.plugins.tilemap);\n        renderer.bindShader(shader);\n        this._globalMat = this._globalMat || new PIXI.Matrix();\n\n        renderer._activeRenderTarget.projectionMatrix.copy(this._globalMat).append(this.worldTransform);\n\n        shader.uniforms.projectionMatrix = this._globalMat.toArray(true);\n        shader.uniforms.shadowColor = this.shadowColor;\n\n        if (this.useSquare) {\n          var tempScale = this._tempScale = this._tempScale || [0, 0];\n          tempScale[0] = this._globalMat.a >= 0 ? 1 : -1;\n          tempScale[1] = this._globalMat.d < 0 ? 1 : -1;\n          var ps = shader.uniforms.pointScale = tempScale;\n          shader.uniforms.projectionScale = Math.abs(this.worldTransform.a) * renderer.resolution;\n        }\n\n        var af = shader.uniforms.animationFrame = renderer.plugins.tilemap.tileAnim;\n        var layers = this.children;\n\n        for (var i = 0; i < layers.length; i++) {\n          layers[i].renderWebGL(renderer, this.useSquare);\n        }\n      };\n\n      CompositeRectTileLayer.prototype.isModified = function (anim) {\n        var layers = this.children;\n\n        if (this.modificationMarker != layers.length) {\n          return true;\n        }\n\n        for (var i = 0; i < layers.length; i++) {\n          var layer = layers[i];\n\n          if (layer.modificationMarker != layer.pointsBuf.length || anim && layer.hasAnim) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n\n      CompositeRectTileLayer.prototype.clearModify = function () {\n        var layers = this.children;\n        this.modificationMarker = layers.length;\n\n        for (var i = 0; i < layers.length; i++) {\n          var layer = layers[i];\n          layer.modificationMarker = layer.pointsBuf.length;\n        }\n      };\n\n      return CompositeRectTileLayer;\n    }(PIXI.Container);\n\n    tilemap.CompositeRectTileLayer = CompositeRectTileLayer;\n  })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\n})(PIXI || (PIXI = {}));\n\nvar PIXI;\n\n(function (PIXI) {\n  var tilemap;\n\n  (function (tilemap) {\n    var GraphicsLayer = function (_super) {\n      __extends(GraphicsLayer, _super);\n\n      function GraphicsLayer(zIndex) {\n        var _this = _super.call(this) || this;\n\n        _this.z = _this.zIndex = zIndex;\n        return _this;\n      }\n\n      GraphicsLayer.prototype.renderCanvas = function (renderer) {\n        var wt = null;\n\n        if (renderer.plugins.tilemap.dontUseTransform) {\n          wt = this.transform.worldTransform;\n          this.transform.worldTransform = PIXI.Matrix.IDENTITY;\n        }\n\n        renderer.plugins.graphics.render(this);\n\n        if (renderer.plugins.tilemap.dontUseTransform) {\n          this.transform.worldTransform = wt;\n        }\n\n        renderer.context.globalAlpha = 1.0;\n      };\n\n      GraphicsLayer.prototype.renderWebGL = function (renderer) {\n        if (!this._webGL[renderer.CONTEXT_UID]) this.dirty = true;\n\n        _super.prototype.renderWebGL.call(this, renderer);\n      };\n\n      GraphicsLayer.prototype.isModified = function (anim) {\n        return false;\n      };\n\n      GraphicsLayer.prototype.clearModify = function () {};\n\n      return GraphicsLayer;\n    }(PIXI.Graphics);\n  })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\n})(PIXI || (PIXI = {}));\n\nvar PIXI;\n\n(function (PIXI) {\n  var tilemap;\n\n  (function (tilemap) {\n    var RectTileLayer = function (_super) {\n      __extends(RectTileLayer, _super);\n\n      function RectTileLayer(zIndex, texture) {\n        var _this = _super.call(this) || this;\n\n        _this.z = 0;\n        _this.zIndex = 0;\n        _this.pointsBuf = [];\n        _this._tempSize = new Float32Array([0, 0]);\n        _this._tempTexSize = 1;\n        _this.modificationMarker = 0;\n        _this.hasAnim = false;\n        _this.vbId = 0;\n        _this.vbBuffer = null;\n        _this.vbArray = null;\n        _this.vbInts = null;\n\n        _this.initialize(zIndex, texture);\n\n        return _this;\n      }\n\n      RectTileLayer.prototype.initialize = function (zIndex, textures) {\n        if (!textures) {\n          textures = [];\n        } else if (!(textures instanceof Array) && textures.baseTexture) {\n          textures = [textures];\n        }\n\n        this.textures = textures;\n        this.z = this.zIndex = zIndex;\n        this.visible = false;\n      };\n\n      RectTileLayer.prototype.clear = function () {\n        this.pointsBuf.length = 0;\n        this.modificationMarker = 0;\n        this.hasAnim = false;\n      };\n\n      RectTileLayer.prototype.renderCanvas = function (renderer) {\n        if (this.textures.length === 0) return;\n        var points = this.pointsBuf;\n        renderer.context.fillStyle = '#000000';\n\n        for (var i = 0, n = points.length; i < n; i += 9) {\n          var x1 = points[i],\n              y1 = points[i + 1];\n          var x2 = points[i + 2],\n              y2 = points[i + 3];\n          var w = points[i + 4];\n          var h = points[i + 5];\n          x1 += points[i + 6] * renderer.plugins.tilemap.tileAnim[0];\n          y1 += points[i + 7] * renderer.plugins.tilemap.tileAnim[1];\n          var textureId = points[i + 8];\n\n          if (textureId >= 0) {\n            renderer.context.drawImage(this.textures[textureId].baseTexture.source, x1, y1, w, h, x2, y2, w, h);\n          } else {\n            renderer.context.globalAlpha = 0.5;\n            renderer.context.fillRect(x2, y2, w, h);\n            renderer.context.globalAlpha = 1;\n          }\n        }\n      };\n\n      RectTileLayer.prototype.addRect = function (textureId, u, v, x, y, tileWidth, tileHeight, animX, animY) {\n        if (animX === void 0) {\n          animX = 0;\n        }\n\n        if (animY === void 0) {\n          animY = 0;\n        }\n\n        var pb = this.pointsBuf;\n        this.hasAnim = this.hasAnim || animX > 0 || animY > 0;\n\n        if (tileWidth == tileHeight) {\n          pb.push(u);\n          pb.push(v);\n          pb.push(x);\n          pb.push(y);\n          pb.push(tileWidth);\n          pb.push(tileHeight);\n          pb.push(animX | 0);\n          pb.push(animY | 0);\n          pb.push(textureId);\n        } else {\n          var i;\n\n          if (tileWidth % tileHeight === 0) {\n            for (i = 0; i < tileWidth / tileHeight; i++) {\n              pb.push(u + i * tileHeight);\n              pb.push(v);\n              pb.push(x + i * tileHeight);\n              pb.push(y);\n              pb.push(tileHeight);\n              pb.push(tileHeight);\n              pb.push(animX | 0);\n              pb.push(animY | 0);\n              pb.push(textureId);\n            }\n          } else if (tileHeight % tileWidth === 0) {\n            for (i = 0; i < tileHeight / tileWidth; i++) {\n              pb.push(u);\n              pb.push(v + i * tileWidth);\n              pb.push(x);\n              pb.push(y + i * tileWidth);\n              pb.push(tileWidth);\n              pb.push(tileWidth);\n              pb.push(animX | 0);\n              pb.push(animY | 0);\n              pb.push(textureId);\n            }\n          } else {\n            pb.push(u);\n            pb.push(v);\n            pb.push(x);\n            pb.push(y);\n            pb.push(tileWidth);\n            pb.push(tileHeight);\n            pb.push(animX | 0);\n            pb.push(animY | 0);\n            pb.push(textureId);\n          }\n        }\n      };\n\n      ;\n\n      RectTileLayer.prototype.renderWebGL = function (renderer, useSquare) {\n        if (useSquare === void 0) {\n          useSquare = false;\n        }\n\n        var points = this.pointsBuf;\n        if (points.length === 0) return;\n        var rectsCount = points.length / 9;\n        var tile = renderer.plugins.tilemap;\n        var gl = renderer.gl;\n\n        if (!useSquare) {\n          tile.checkIndexBuffer(rectsCount);\n        }\n\n        var shader = tile.getShader(useSquare);\n        var textures = this.textures;\n        if (textures.length === 0) return;\n        var len = textures.length;\n\n        if (this._tempTexSize < shader.maxTextures) {\n          this._tempTexSize = shader.maxTextures;\n          this._tempSize = new Float32Array(2 * shader.maxTextures);\n        }\n\n        for (var i = 0; i < len; i++) {\n          if (!textures[i] || !textures[i].valid) return;\n          var texture = textures[i].baseTexture;\n        }\n\n        tile.bindTextures(renderer, shader, textures);\n        var vb = tile.getVb(this.vbId);\n\n        if (!vb) {\n          vb = tile.createVb(useSquare);\n          this.vbId = vb.id;\n          this.vbBuffer = null;\n          this.modificationMarker = 0;\n        }\n\n        var vao = vb.vao;\n        renderer.bindVao(vao);\n        var vertexBuf = vb.vb;\n        vertexBuf.bind();\n        var vertices = rectsCount * shader.vertPerQuad;\n        if (vertices === 0) return;\n\n        if (this.modificationMarker != vertices) {\n          this.modificationMarker = vertices;\n          var vs = shader.stride * vertices;\n\n          if (!this.vbBuffer || this.vbBuffer.byteLength < vs) {\n            var bk = shader.stride;\n\n            while (bk < vs) {\n              bk *= 2;\n            }\n\n            this.vbBuffer = new ArrayBuffer(bk);\n            this.vbArray = new Float32Array(this.vbBuffer);\n            this.vbInts = new Uint32Array(this.vbBuffer);\n            vertexBuf.upload(this.vbBuffer, 0, true);\n          }\n\n          var arr = this.vbArray,\n              ints = this.vbInts;\n          var sz = 0;\n          var textureId, shiftU, shiftV;\n\n          if (useSquare) {\n            for (i = 0; i < points.length; i += 9) {\n              textureId = points[i + 8] >> 2;\n              shiftU = 1024 * (points[i + 8] & 1);\n              shiftV = 1024 * (points[i + 8] >> 1 & 1);\n              arr[sz++] = points[i + 2];\n              arr[sz++] = points[i + 3];\n              arr[sz++] = points[i + 0] + shiftU;\n              arr[sz++] = points[i + 1] + shiftV;\n              arr[sz++] = points[i + 4];\n              arr[sz++] = points[i + 6];\n              arr[sz++] = points[i + 7];\n              arr[sz++] = textureId;\n            }\n          } else {\n            var tint = -1;\n\n            for (i = 0; i < points.length; i += 9) {\n              var eps = 0.5;\n              textureId = points[i + 8] >> 2;\n              shiftU = 1024 * (points[i + 8] & 1);\n              shiftV = 1024 * (points[i + 8] >> 1 & 1);\n              var x = points[i + 2],\n                  y = points[i + 3];\n              var w = points[i + 4],\n                  h = points[i + 5];\n              var u = points[i] + shiftU,\n                  v = points[i + 1] + shiftV;\n              var animX = points[i + 6],\n                  animY = points[i + 7];\n              arr[sz++] = x;\n              arr[sz++] = y;\n              arr[sz++] = u;\n              arr[sz++] = v;\n              arr[sz++] = u + eps;\n              arr[sz++] = v + eps;\n              arr[sz++] = u + w - eps;\n              arr[sz++] = v + h - eps;\n              arr[sz++] = animX;\n              arr[sz++] = animY;\n              arr[sz++] = textureId;\n              arr[sz++] = x + w;\n              arr[sz++] = y;\n              arr[sz++] = u + w;\n              arr[sz++] = v;\n              arr[sz++] = u + eps;\n              arr[sz++] = v + eps;\n              arr[sz++] = u + w - eps;\n              arr[sz++] = v + h - eps;\n              arr[sz++] = animX;\n              arr[sz++] = animY;\n              arr[sz++] = textureId;\n              arr[sz++] = x + w;\n              arr[sz++] = y + h;\n              arr[sz++] = u + w;\n              arr[sz++] = v + h;\n              arr[sz++] = u + eps;\n              arr[sz++] = v + eps;\n              arr[sz++] = u + w - eps;\n              arr[sz++] = v + h - eps;\n              arr[sz++] = animX;\n              arr[sz++] = animY;\n              arr[sz++] = textureId;\n              arr[sz++] = x;\n              arr[sz++] = y + h;\n              arr[sz++] = u;\n              arr[sz++] = v + h;\n              arr[sz++] = u + eps;\n              arr[sz++] = v + eps;\n              arr[sz++] = u + w - eps;\n              arr[sz++] = v + h - eps;\n              arr[sz++] = animX;\n              arr[sz++] = animY;\n              arr[sz++] = textureId;\n            }\n          }\n\n          vertexBuf.upload(arr, 0, true);\n        }\n\n        if (useSquare) gl.drawArrays(gl.POINTS, 0, vertices);else gl.drawElements(gl.TRIANGLES, rectsCount * 6, gl.UNSIGNED_SHORT, 0);\n      };\n\n      return RectTileLayer;\n    }(PIXI.Container);\n\n    tilemap.RectTileLayer = RectTileLayer;\n  })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\n})(PIXI || (PIXI = {}));\n\nvar PIXI;\n\n(function (PIXI) {\n  var tilemap;\n\n  (function (tilemap) {\n    var rectShaderFrag = \"varying vec2 vTextureCoord;\\nvarying vec4 vFrame;\\nvarying float vTextureId;\\nuniform vec4 shadowColor;\\nuniform sampler2D uSamplers[%count%];\\nuniform vec2 uSamplerSize[%count%];\\n\\nvoid main(void){\\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\\n   float textureId = floor(vTextureId + 0.5);\\n\\n   vec4 color;\\n   %forloop%\\n   gl_FragColor = color;\\n}\";\n    var rectShaderVert = \"\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aFrame;\\nattribute vec2 aAnim;\\nattribute float aTextureId;\\n\\nuniform mat3 projectionMatrix;\\nuniform vec2 animationFrame;\\n\\nvarying vec2 vTextureCoord;\\nvarying float vTextureId;\\nvarying vec4 vFrame;\\n\\nvoid main(void){\\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n   vec2 anim = aAnim * animationFrame;\\n   vTextureCoord = aTextureCoord + anim;\\n   vFrame = aFrame + vec4(anim, anim);\\n   vTextureId = aTextureId;\\n}\\n\";\n\n    var TilemapShader = function (_super) {\n      __extends(TilemapShader, _super);\n\n      function TilemapShader(gl, maxTextures, shaderVert, shaderFrag) {\n        var _this = _super.call(this, gl, shaderVert, shaderFrag) || this;\n\n        _this.maxTextures = 0;\n        _this.maxTextures = maxTextures;\n        tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n        return _this;\n      }\n\n      return TilemapShader;\n    }(PIXI.Shader);\n\n    tilemap.TilemapShader = TilemapShader;\n\n    var RectTileShader = function (_super) {\n      __extends(RectTileShader, _super);\n\n      function RectTileShader(gl, maxTextures) {\n        var _this = _super.call(this, gl, maxTextures, rectShaderVert, tilemap.shaderGenerator.generateFragmentSrc(maxTextures, rectShaderFrag)) || this;\n\n        _this.vertSize = 11;\n        _this.vertPerQuad = 4;\n        _this.stride = _this.vertSize * 4;\n        tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n        return _this;\n      }\n\n      RectTileShader.prototype.createVao = function (renderer, vb) {\n        var gl = renderer.gl;\n        return renderer.createVao().addIndex(this.indexBuffer).addAttribute(vb, this.attributes.aVertexPosition, gl.FLOAT, false, this.stride, 0).addAttribute(vb, this.attributes.aTextureCoord, gl.FLOAT, false, this.stride, 2 * 4).addAttribute(vb, this.attributes.aFrame, gl.FLOAT, false, this.stride, 4 * 4).addAttribute(vb, this.attributes.aAnim, gl.FLOAT, false, this.stride, 8 * 4).addAttribute(vb, this.attributes.aTextureId, gl.FLOAT, false, this.stride, 10 * 4);\n      };\n\n      return RectTileShader;\n    }(TilemapShader);\n\n    tilemap.RectTileShader = RectTileShader;\n  })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\n})(PIXI || (PIXI = {}));\n\nvar PIXI;\n\n(function (PIXI) {\n  var tilemap;\n\n  (function (tilemap) {\n    var shaderGenerator;\n\n    (function (shaderGenerator) {\n      function fillSamplers(shader, maxTextures) {\n        var sampleValues = [];\n\n        for (var i = 0; i < maxTextures; i++) {\n          sampleValues[i] = i;\n        }\n\n        shader.bind();\n        shader.uniforms.uSamplers = sampleValues;\n        var samplerSize = [];\n\n        for (i = 0; i < maxTextures; i++) {\n          samplerSize.push(1.0 / 2048);\n          samplerSize.push(1.0 / 2048);\n        }\n\n        shader.uniforms.uSamplerSize = samplerSize;\n      }\n\n      shaderGenerator.fillSamplers = fillSamplers;\n\n      function generateFragmentSrc(maxTextures, fragmentSrc) {\n        return fragmentSrc.replace(/%count%/gi, maxTextures + \"\").replace(/%forloop%/gi, this.generateSampleSrc(maxTextures));\n      }\n\n      shaderGenerator.generateFragmentSrc = generateFragmentSrc;\n\n      function generateSampleSrc(maxTextures) {\n        var src = '';\n        src += '\\n';\n        src += '\\n';\n        src += 'if(vTextureId <= -1.0) {';\n        src += '\\n\\tcolor = shadowColor;';\n        src += '\\n}';\n\n        for (var i = 0; i < maxTextures; i++) {\n          src += '\\nelse ';\n\n          if (i < maxTextures - 1) {\n            src += 'if(textureId == ' + i + '.0)';\n          }\n\n          src += '\\n{';\n          src += '\\n\\tcolor = texture2D(uSamplers[' + i + '], textureCoord * uSamplerSize[' + i + ']);';\n          src += '\\n}';\n        }\n\n        src += '\\n';\n        src += '\\n';\n        return src;\n      }\n\n      shaderGenerator.generateSampleSrc = generateSampleSrc;\n    })(shaderGenerator = tilemap.shaderGenerator || (tilemap.shaderGenerator = {}));\n  })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\n})(PIXI || (PIXI = {}));\n\nvar PIXI;\n\n(function (PIXI) {\n  var tilemap;\n\n  (function (tilemap) {\n    var squareShaderVert = \"\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec2 aAnim;\\nattribute float aTextureId;\\nattribute float aSize;\\n\\nuniform mat3 projectionMatrix;\\nuniform vec2 samplerSize;\\nuniform vec2 animationFrame;\\nuniform float projectionScale;\\n\\nvarying vec2 vTextureCoord;\\nvarying float vSize;\\nvarying float vTextureId;\\n\\nvoid main(void){\\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition + aSize * 0.5, 1.0)).xy, 0.0, 1.0);\\n   gl_PointSize = aSize * projectionScale;\\n   vTextureCoord = aTextureCoord + aAnim * animationFrame;\\n   vTextureId = aTextureId;\\n   vSize = aSize;\\n}\\n\";\n    var squareShaderFrag = \"\\nvarying vec2 vTextureCoord;\\nvarying float vSize;\\nvarying float vTextureId;\\n\\nuniform vec4 shadowColor;\\nuniform sampler2D uSamplers[%count%];\\nuniform vec2 uSamplerSize[%count%];\\nuniform vec2 pointScale;\\n\\nvoid main(void){\\n   float margin = 0.5 / vSize;\\n   vec2 pointCoord = (gl_PointCoord - 0.5) * pointScale + 0.5;\\n   vec2 clamped = vec2(clamp(pointCoord.x, margin, 1.0 - margin), clamp(pointCoord.y, margin, 1.0 - margin));\\n   vec2 textureCoord = pointCoord * vSize + vTextureCoord;\\n   float textureId = vTextureId;\\n   vec4 color;\\n   %forloop%\\n   gl_FragColor = color;\\n}\\n\\n\";\n\n    var SquareTileShader = function (_super) {\n      __extends(SquareTileShader, _super);\n\n      function SquareTileShader(gl, maxTextures) {\n        var _this = _super.call(this, gl, maxTextures, squareShaderVert, tilemap.shaderGenerator.generateFragmentSrc(maxTextures, squareShaderFrag)) || this;\n\n        _this.vertSize = 8;\n        _this.vertPerQuad = 1;\n        _this.stride = _this.vertSize * 4;\n        _this.maxTextures = maxTextures;\n        tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n        return _this;\n      }\n\n      SquareTileShader.prototype.createVao = function (renderer, vb) {\n        var gl = renderer.gl;\n        return renderer.createVao().addIndex(this.indexBuffer).addAttribute(vb, this.attributes.aVertexPosition, gl.FLOAT, false, this.stride, 0).addAttribute(vb, this.attributes.aTextureCoord, gl.FLOAT, false, this.stride, 2 * 4).addAttribute(vb, this.attributes.aSize, gl.FLOAT, false, this.stride, 4 * 4).addAttribute(vb, this.attributes.aAnim, gl.FLOAT, false, this.stride, 5 * 4).addAttribute(vb, this.attributes.aTextureId, gl.FLOAT, false, this.stride, 7 * 4);\n      };\n\n      ;\n      return SquareTileShader;\n    }(tilemap.TilemapShader);\n\n    tilemap.SquareTileShader = SquareTileShader;\n  })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\n})(PIXI || (PIXI = {}));\n\nvar PIXI;\n\n(function (PIXI) {\n  var tilemap;\n\n  (function (tilemap) {\n    var glCore = PIXI.glCore;\n\n    function _hackSubImage(tex, sprite, clearBuffer, clearWidth, clearHeight) {\n      var gl = tex.gl;\n      var baseTex = sprite.texture.baseTexture;\n\n      if (clearBuffer && clearWidth > 0 && clearHeight > 0) {\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, sprite.position.x, sprite.position.y, clearWidth, clearHeight, tex.format, tex.type, clearBuffer);\n      }\n\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n      gl.texSubImage2D(gl.TEXTURE_2D, 0, sprite.position.x, sprite.position.y, tex.format, tex.type, baseTex.source);\n    }\n\n    var TileRenderer = function (_super) {\n      __extends(TileRenderer, _super);\n\n      function TileRenderer(renderer) {\n        var _this = _super.call(this, renderer) || this;\n\n        _this.vbs = {};\n        _this.indices = new Uint16Array(0);\n        _this.lastTimeCheck = 0;\n        _this.tileAnim = [0, 0];\n        _this.maxTextures = 4;\n        _this.texLoc = [];\n        return _this;\n      }\n\n      TileRenderer.prototype.onContextChange = function () {\n        var gl = this.renderer.gl;\n        var maxTextures = this.maxTextures;\n        this.rectShader = new tilemap.RectTileShader(gl, maxTextures);\n        this.squareShader = new tilemap.SquareTileShader(gl, maxTextures);\n        this.checkIndexBuffer(2000);\n        this.rectShader.indexBuffer = this.indexBuffer;\n        this.squareShader.indexBuffer = this.indexBuffer;\n        this.vbs = {};\n        this.glTextures = [];\n        this.boundSprites = [];\n        this.initBounds();\n      };\n\n      TileRenderer.prototype.initBounds = function () {\n        var gl = this.renderer.gl;\n        var tempCanvas = document.createElement('canvas');\n        tempCanvas.width = 2048;\n        tempCanvas.height = 2048;\n\n        for (var i = 0; i < this.maxTextures; i++) {\n          var rt = PIXI.RenderTexture.create(2048, 2048);\n          rt.baseTexture.premultipliedAlpha = true;\n          rt.baseTexture.scaleMode = TileRenderer.SCALE_MODE;\n          rt.baseTexture.wrapMode = PIXI.WRAP_MODES.CLAMP;\n          this.renderer.textureManager.updateTexture(rt);\n          this.glTextures.push(rt);\n          var bs = [];\n\n          for (var j = 0; j < 4; j++) {\n            var spr = new PIXI.Sprite();\n            spr.position.x = 1024 * (j & 1);\n            spr.position.y = 1024 * (j >> 1);\n            bs.push(spr);\n          }\n\n          this.boundSprites.push(bs);\n        }\n      };\n\n      TileRenderer.prototype.bindTextures = function (renderer, shader, textures) {\n        var bounds = this.boundSprites;\n        var glts = this.glTextures;\n        var len = textures.length;\n        var maxTextures = this.maxTextures;\n\n        if (len > 4 * maxTextures) {\n          return;\n        }\n\n        var doClear = TileRenderer.DO_CLEAR;\n\n        if (doClear && !this._clearBuffer) {\n          this._clearBuffer = new Uint8Array(1024 * 1024 * 4);\n        }\n\n        var i;\n\n        for (i = 0; i < len; i++) {\n          var texture = textures[i];\n          if (!texture || !textures[i].valid) continue;\n          var bs = bounds[i >> 2][i & 3];\n\n          if (!bs.texture || bs.texture.baseTexture !== texture.baseTexture) {\n            bs.texture = texture;\n            var glt = glts[i >> 2];\n            renderer.bindTexture(glt, 0, true);\n\n            if (doClear) {\n              _hackSubImage(glt.baseTexture._glTextures[renderer.CONTEXT_UID], bs, this._clearBuffer, 1024, 1024);\n            } else {\n              _hackSubImage(glt.baseTexture._glTextures[renderer.CONTEXT_UID], bs);\n            }\n          }\n        }\n\n        this.texLoc.length = 0;\n\n        for (i = 0; i < maxTextures; i++) {\n          this.texLoc.push(renderer.bindTexture(glts[i], i, true));\n        }\n\n        shader.uniforms.uSamplers = this.texLoc;\n      };\n\n      TileRenderer.prototype.checkLeaks = function () {\n        var now = Date.now();\n        var old = now - 10000;\n\n        if (this.lastTimeCheck < old || this.lastTimeCheck > now) {\n          this.lastTimeCheck = now;\n          var vbs = this.vbs;\n\n          for (var key in vbs) {\n            if (vbs[key].lastTimeAccess < old) {\n              this.removeVb(key);\n            }\n          }\n        }\n      };\n\n      ;\n\n      TileRenderer.prototype.start = function () {\n        this.renderer.state.setBlendMode(PIXI.BLEND_MODES.NORMAL);\n      };\n\n      TileRenderer.prototype.getVb = function (id) {\n        this.checkLeaks();\n        var vb = this.vbs[id];\n\n        if (vb) {\n          vb.lastAccessTime = Date.now();\n          return vb;\n        }\n\n        return null;\n      };\n\n      TileRenderer.prototype.createVb = function (useSquare) {\n        var id = ++TileRenderer.vbAutoincrement;\n        var shader = this.getShader(useSquare);\n        var gl = this.renderer.gl;\n        var vb = PIXI.glCore.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n        var stuff = {\n          id: id,\n          vb: vb,\n          vao: shader.createVao(this.renderer, vb),\n          lastTimeAccess: Date.now(),\n          useSquare: useSquare,\n          shader: shader\n        };\n        this.vbs[id] = stuff;\n        return stuff;\n      };\n\n      TileRenderer.prototype.removeVb = function (id) {\n        if (this.vbs[id]) {\n          this.vbs[id].vb.destroy();\n          this.vbs[id].vao.destroy();\n          delete this.vbs[id];\n        }\n      };\n\n      TileRenderer.prototype.checkIndexBuffer = function (size) {\n        var totalIndices = size * 6;\n        var indices = this.indices;\n\n        if (totalIndices <= indices.length) {\n          return;\n        }\n\n        var len = indices.length || totalIndices;\n\n        while (len < totalIndices) {\n          len <<= 1;\n        }\n\n        indices = new Uint16Array(len);\n        this.indices = indices;\n\n        for (var i = 0, j = 0; i + 5 < indices.length; i += 6, j += 4) {\n          indices[i + 0] = j + 0;\n          indices[i + 1] = j + 1;\n          indices[i + 2] = j + 2;\n          indices[i + 3] = j + 0;\n          indices[i + 4] = j + 2;\n          indices[i + 5] = j + 3;\n        }\n\n        if (this.indexBuffer) {\n          this.indexBuffer.upload(indices);\n        } else {\n          var gl = this.renderer.gl;\n          this.indexBuffer = glCore.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n        }\n      };\n\n      TileRenderer.prototype.getShader = function (useSquare) {\n        return useSquare ? this.squareShader : this.rectShader;\n      };\n\n      TileRenderer.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n\n        this.rectShader.destroy();\n        this.squareShader.destroy();\n        this.rectShader = null;\n        this.squareShader = null;\n      };\n\n      ;\n      return TileRenderer;\n    }(PIXI.ObjectRenderer);\n\n    TileRenderer.vbAutoincrement = 0;\n    TileRenderer.SCALE_MODE = PIXI.SCALE_MODES.LINEAR;\n    TileRenderer.DO_CLEAR = false;\n    tilemap.TileRenderer = TileRenderer;\n    PIXI.WebGLRenderer.registerPlugin('tilemap', TileRenderer);\n  })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\n})(PIXI || (PIXI = {}));\n\nvar PIXI;\n\n(function (PIXI) {\n  var tilemap;\n\n  (function (tilemap_1) {\n    var ZLayer = function (_super) {\n      __extends(ZLayer, _super);\n\n      function ZLayer(tilemap, zIndex) {\n        var _this = _super.call(this) || this;\n\n        _this._lastAnimationFrame = -1;\n        _this.tilemap = tilemap;\n        _this.z = zIndex;\n        return _this;\n      }\n\n      ZLayer.prototype.clear = function () {\n        var layers = this.children;\n\n        for (var i = 0; i < layers.length; i++) {\n          layers[i].clear();\n        }\n\n        this._previousLayers = 0;\n      };\n\n      ZLayer.prototype.cacheIfDirty = function () {\n        var tilemap = this.tilemap;\n        var layers = this.children;\n        var modified = this._previousLayers != layers.length;\n        this._previousLayers = layers.length;\n        var buf = this.canvasBuffer;\n        var tempRender = this._tempRender;\n\n        if (!buf) {\n          buf = this.canvasBuffer = document.createElement('canvas');\n          tempRender = this._tempRender = new PIXI.CanvasRenderer(100, 100, {\n            view: buf\n          });\n          tempRender.context = tempRender.rootContext;\n          tempRender.plugins.tilemap.dontUseTransform = true;\n        }\n\n        if (buf.width != tilemap._layerWidth || buf.height != tilemap._layerHeight) {\n          buf.width = tilemap._layerWidth;\n          buf.height = tilemap._layerHeight;\n          modified = true;\n        }\n\n        var i;\n\n        if (!modified) {\n          for (i = 0; i < layers.length; i++) {\n            if (layers[i].isModified(this._lastAnimationFrame != tilemap.animationFrame)) {\n              modified = true;\n              break;\n            }\n          }\n        }\n\n        this._lastAnimationFrame = tilemap.animationFrame;\n\n        if (modified) {\n          if (tilemap._hackRenderer) {\n            tilemap._hackRenderer(tempRender);\n          }\n\n          tempRender.context.clearRect(0, 0, buf.width, buf.height);\n\n          for (i = 0; i < layers.length; i++) {\n            layers[i].clearModify();\n            layers[i].renderCanvas(tempRender);\n          }\n        }\n\n        this.layerTransform = this.worldTransform;\n\n        for (i = 0; i < layers.length; i++) {\n          this.layerTransform = layers[i].worldTransform;\n          break;\n        }\n      };\n\n      ;\n\n      ZLayer.prototype.renderCanvas = function (renderer) {\n        this.cacheIfDirty();\n        var wt = this.layerTransform;\n        renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n        var tilemap = this.tilemap;\n        renderer.context.drawImage(this.canvasBuffer, 0, 0);\n      };\n\n      ;\n      return ZLayer;\n    }(PIXI.Container);\n\n    tilemap_1.ZLayer = ZLayer;\n  })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\n})(PIXI || (PIXI = {}));","map":{"version":3,"sources":["/home/laferu/projetos/swipe/Platina-the-Wolf/components/platinaGameOneComponents/js/libs/pixi-tilemap.js"],"names":["PIXI","tilemap","CanvasTileRenderer","renderer","tileAnim","dontUseTransform","CanvasRenderer","registerPlugin","__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","CompositeRectTileLayer","_super","zIndex","bitmaps","useSquare","texPerChild","_this","call","shadowColor","Float32Array","modificationMarker","_globalMat","_tempScale","initialize","apply","arguments","updateTransform","displayObjectUpdateTransform","z","setBitmaps","len1","children","length","len2","Math","ceil","i","textures","slice","addChild","RectTileLayer","clear","addRect","num","u","v","x","y","tileWidth","tileHeight","addFrame","texture_","animX","animY","texture","layer","ind","childIndex","Texture","fromImage","child","tex","j","baseTexture","push","frame","width","height","renderCanvas","plugins","wt","worldTransform","context","setTransform","a","c","tx","resolution","ty","layers","renderWebGL","gl","shader","getShader","setObjectRenderer","bindShader","Matrix","_activeRenderTarget","projectionMatrix","copy","append","uniforms","toArray","tempScale","ps","pointScale","projectionScale","abs","af","animationFrame","isModified","anim","pointsBuf","hasAnim","clearModify","Container","GraphicsLayer","transform","IDENTITY","graphics","render","globalAlpha","_webGL","CONTEXT_UID","dirty","Graphics","_tempSize","_tempTexSize","vbId","vbBuffer","vbArray","vbInts","visible","points","fillStyle","n","x1","y1","x2","y2","w","h","textureId","drawImage","source","fillRect","pb","rectsCount","tile","checkIndexBuffer","len","maxTextures","valid","bindTextures","vb","getVb","createVb","id","vao","bindVao","vertexBuf","bind","vertices","vertPerQuad","vs","stride","byteLength","bk","ArrayBuffer","Uint32Array","upload","arr","ints","sz","shiftU","shiftV","tint","eps","drawArrays","POINTS","drawElements","TRIANGLES","UNSIGNED_SHORT","rectShaderFrag","rectShaderVert","TilemapShader","shaderVert","shaderFrag","shaderGenerator","fillSamplers","Shader","RectTileShader","generateFragmentSrc","vertSize","createVao","addIndex","indexBuffer","addAttribute","attributes","aVertexPosition","FLOAT","aTextureCoord","aFrame","aAnim","aTextureId","sampleValues","uSamplers","samplerSize","uSamplerSize","fragmentSrc","replace","generateSampleSrc","src","squareShaderVert","squareShaderFrag","SquareTileShader","aSize","glCore","_hackSubImage","sprite","clearBuffer","clearWidth","clearHeight","baseTex","texSubImage2D","TEXTURE_2D","position","format","type","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","TileRenderer","vbs","indices","Uint16Array","lastTimeCheck","texLoc","onContextChange","rectShader","squareShader","glTextures","boundSprites","initBounds","tempCanvas","document","createElement","rt","RenderTexture","premultipliedAlpha","scaleMode","SCALE_MODE","wrapMode","WRAP_MODES","CLAMP","textureManager","updateTexture","bs","spr","Sprite","bounds","glts","doClear","DO_CLEAR","_clearBuffer","Uint8Array","glt","bindTexture","_glTextures","checkLeaks","now","Date","old","key","lastTimeAccess","removeVb","start","state","setBlendMode","BLEND_MODES","NORMAL","lastAccessTime","vbAutoincrement","GLBuffer","createVertexBuffer","STREAM_DRAW","stuff","destroy","size","totalIndices","createIndexBuffer","STATIC_DRAW","ObjectRenderer","SCALE_MODES","LINEAR","WebGLRenderer","tilemap_1","ZLayer","_lastAnimationFrame","_previousLayers","cacheIfDirty","modified","buf","canvasBuffer","tempRender","_tempRender","view","rootContext","_layerWidth","_layerHeight","_hackRenderer","clearRect","layerTransform"],"mappings":"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","sourcesContent":["var PIXI;\r\n(function (PIXI) {\r\n    var tilemap;\r\n    (function (tilemap) {\r\n        var CanvasTileRenderer = (function () {\r\n            function CanvasTileRenderer(renderer) {\r\n                this.tileAnim = [0, 0];\r\n                this.dontUseTransform = false;\r\n                this.renderer = renderer;\r\n                this.tileAnim = [0, 0];\r\n            }\r\n            return CanvasTileRenderer;\r\n        }());\r\n        tilemap.CanvasTileRenderer = CanvasTileRenderer;\r\n        PIXI.CanvasRenderer.registerPlugin('tilemap', CanvasTileRenderer);\r\n    })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\r\n})(PIXI || (PIXI = {}));\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar PIXI;\r\n(function (PIXI) {\r\n    var tilemap;\r\n    (function (tilemap) {\r\n        var CompositeRectTileLayer = (function (_super) {\r\n            __extends(CompositeRectTileLayer, _super);\r\n            function CompositeRectTileLayer(zIndex, bitmaps, useSquare, texPerChild) {\r\n                var _this = _super.call(this) || this;\r\n                _this.shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\r\n                _this.modificationMarker = 0;\r\n                _this._globalMat = null;\r\n                _this._tempScale = null;\r\n                _this.initialize.apply(_this, arguments);\r\n                return _this;\r\n            }\r\n            CompositeRectTileLayer.prototype.updateTransform = function () {\r\n                _super.prototype.displayObjectUpdateTransform.call(this);\r\n            };\r\n            CompositeRectTileLayer.prototype.initialize = function (zIndex, bitmaps, useSquare, texPerChild) {\r\n                this.z = this.zIndex = zIndex;\r\n                this.useSquare = useSquare;\r\n                this.texPerChild = texPerChild || 16;\r\n                if (bitmaps) {\r\n                    this.setBitmaps(bitmaps);\r\n                }\r\n            };\r\n            CompositeRectTileLayer.prototype.setBitmaps = function (bitmaps) {\r\n                var texPerChild = this.texPerChild;\r\n                var len1 = this.children.length;\r\n                var len2 = Math.ceil(bitmaps.length / texPerChild);\r\n                var i;\r\n                for (i = 0; i < len1; i++) {\r\n                    this.children[i].textures = bitmaps.slice(i * texPerChild, (i + 1) * texPerChild);\r\n                }\r\n                for (i = len1; i < len2; i++) {\r\n                    this.addChild(new tilemap.RectTileLayer(this.zIndex, bitmaps.slice(i * texPerChild, (i + 1) * texPerChild)));\r\n                }\r\n            };\r\n            CompositeRectTileLayer.prototype.clear = function () {\r\n                for (var i = 0; i < this.children.length; i++)\r\n                    this.children[i].clear();\r\n                this.modificationMarker = 0;\r\n            };\r\n            CompositeRectTileLayer.prototype.addRect = function (num, u, v, x, y, tileWidth, tileHeight) {\r\n                if (this.children[num] && this.children[num].textures)\r\n                    this.children[num].addRect(0, u, v, x, y, tileWidth, tileHeight);\r\n            };\r\n            CompositeRectTileLayer.prototype.addFrame = function (texture_, x, y, animX, animY) {\r\n                var texture;\r\n                var layer = null, ind = 0;\r\n                var children = this.children;\r\n                if (typeof texture_ === \"number\") {\r\n                    var childIndex = texture_ / this.texPerChild >> 0;\r\n                    layer = children[childIndex];\r\n                    if (!layer) {\r\n                        layer = children[0];\r\n                        if (!layer) {\r\n                            return false;\r\n                        }\r\n                        ind = 0;\r\n                    }\r\n                    else {\r\n                        ind = texture_ % this.texPerChild;\r\n                    }\r\n                    texture = layer.textures[ind];\r\n                }\r\n                else if (typeof texture_ === \"string\") {\r\n                    texture = PIXI.Texture.fromImage(texture_);\r\n                }\r\n                else {\r\n                    texture = texture_;\r\n                    for (var i = 0; i < children.length; i++) {\r\n                        var child = children[i];\r\n                        var tex = child.textures;\r\n                        for (var j = 0; j < tex.length; j++) {\r\n                            if (tex[j].baseTexture == texture.baseTexture) {\r\n                                layer = child;\r\n                                ind = j;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (layer) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!layer) {\r\n                        for (i = 0; i < children.length; i++) {\r\n                            var child = children[i];\r\n                            if (child.textures.length < this.texPerChild) {\r\n                                layer = child;\r\n                                ind = child.textures.length;\r\n                                child.textures.push(texture);\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!layer) {\r\n                            children.push(layer = new tilemap.RectTileLayer(this.zIndex, texture));\r\n                            ind = 0;\r\n                        }\r\n                    }\r\n                }\r\n                layer.addRect(ind, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\r\n                return true;\r\n            };\r\n            ;\r\n            CompositeRectTileLayer.prototype.renderCanvas = function (renderer) {\r\n                if (!renderer.plugins.tilemap.dontUseTransform) {\r\n                    var wt = this.worldTransform;\r\n                    renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\r\n                }\r\n                var layers = this.children;\r\n                for (var i = 0; i < layers.length; i++)\r\n                    layers[i].renderCanvas(renderer);\r\n            };\r\n            ;\r\n            CompositeRectTileLayer.prototype.renderWebGL = function (renderer) {\r\n                var gl = renderer.gl;\r\n                var shader = renderer.plugins.tilemap.getShader(this.useSquare);\r\n                renderer.setObjectRenderer(renderer.plugins.tilemap);\r\n                renderer.bindShader(shader);\r\n                this._globalMat = this._globalMat || new PIXI.Matrix();\r\n                renderer._activeRenderTarget.projectionMatrix.copy(this._globalMat).append(this.worldTransform);\r\n                shader.uniforms.projectionMatrix = this._globalMat.toArray(true);\r\n                shader.uniforms.shadowColor = this.shadowColor;\r\n                if (this.useSquare) {\r\n                    var tempScale = this._tempScale = (this._tempScale || [0, 0]);\r\n                    tempScale[0] = this._globalMat.a >= 0 ? 1 : -1;\r\n                    tempScale[1] = this._globalMat.d < 0 ? 1 : -1;\r\n                    var ps = shader.uniforms.pointScale = tempScale;\r\n                    shader.uniforms.projectionScale = Math.abs(this.worldTransform.a) * renderer.resolution;\r\n                }\r\n                var af = shader.uniforms.animationFrame = renderer.plugins.tilemap.tileAnim;\r\n                var layers = this.children;\r\n                for (var i = 0; i < layers.length; i++)\r\n                    layers[i].renderWebGL(renderer, this.useSquare);\r\n            };\r\n            CompositeRectTileLayer.prototype.isModified = function (anim) {\r\n                var layers = this.children;\r\n                if (this.modificationMarker != layers.length) {\r\n                    return true;\r\n                }\r\n                for (var i = 0; i < layers.length; i++) {\r\n                    var layer = layers[i];\r\n                    if (layer.modificationMarker != layer.pointsBuf.length ||\r\n                        anim && layer.hasAnim) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n            CompositeRectTileLayer.prototype.clearModify = function () {\r\n                var layers = this.children;\r\n                this.modificationMarker = layers.length;\r\n                for (var i = 0; i < layers.length; i++) {\r\n                    var layer = layers[i];\r\n                    layer.modificationMarker = layer.pointsBuf.length;\r\n                }\r\n            };\r\n            return CompositeRectTileLayer;\r\n        }(PIXI.Container));\r\n        tilemap.CompositeRectTileLayer = CompositeRectTileLayer;\r\n    })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\r\n})(PIXI || (PIXI = {}));\r\nvar PIXI;\r\n(function (PIXI) {\r\n    var tilemap;\r\n    (function (tilemap) {\r\n        var GraphicsLayer = (function (_super) {\r\n            __extends(GraphicsLayer, _super);\r\n            function GraphicsLayer(zIndex) {\r\n                var _this = _super.call(this) || this;\r\n                _this.z = _this.zIndex = zIndex;\r\n                return _this;\r\n            }\r\n            GraphicsLayer.prototype.renderCanvas = function (renderer) {\r\n                var wt = null;\r\n                if (renderer.plugins.tilemap.dontUseTransform) {\r\n                    wt = this.transform.worldTransform;\r\n                    this.transform.worldTransform = PIXI.Matrix.IDENTITY;\r\n                }\r\n                renderer.plugins.graphics.render(this);\r\n                if (renderer.plugins.tilemap.dontUseTransform) {\r\n                    this.transform.worldTransform = wt;\r\n                }\r\n                renderer.context.globalAlpha = 1.0;\r\n            };\r\n            GraphicsLayer.prototype.renderWebGL = function (renderer) {\r\n                if (!this._webGL[renderer.CONTEXT_UID])\r\n                    this.dirty = true;\r\n                _super.prototype.renderWebGL.call(this, renderer);\r\n            };\r\n            GraphicsLayer.prototype.isModified = function (anim) {\r\n                return false;\r\n            };\r\n            GraphicsLayer.prototype.clearModify = function () {\r\n            };\r\n            return GraphicsLayer;\r\n        }(PIXI.Graphics));\r\n    })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\r\n})(PIXI || (PIXI = {}));\r\nvar PIXI;\r\n(function (PIXI) {\r\n    var tilemap;\r\n    (function (tilemap) {\r\n        var RectTileLayer = (function (_super) {\r\n            __extends(RectTileLayer, _super);\r\n            function RectTileLayer(zIndex, texture) {\r\n                var _this = _super.call(this) || this;\r\n                _this.z = 0;\r\n                _this.zIndex = 0;\r\n                _this.pointsBuf = [];\r\n                _this._tempSize = new Float32Array([0, 0]);\r\n                _this._tempTexSize = 1;\r\n                _this.modificationMarker = 0;\r\n                _this.hasAnim = false;\r\n                _this.vbId = 0;\r\n                _this.vbBuffer = null;\r\n                _this.vbArray = null;\r\n                _this.vbInts = null;\r\n                _this.initialize(zIndex, texture);\r\n                return _this;\r\n            }\r\n            RectTileLayer.prototype.initialize = function (zIndex, textures) {\r\n                if (!textures) {\r\n                    textures = [];\r\n                }\r\n                else if (!(textures instanceof Array) && textures.baseTexture) {\r\n                    textures = [textures];\r\n                }\r\n                this.textures = textures;\r\n                this.z = this.zIndex = zIndex;\r\n                this.visible = false;\r\n            };\r\n            RectTileLayer.prototype.clear = function () {\r\n                this.pointsBuf.length = 0;\r\n                this.modificationMarker = 0;\r\n                this.hasAnim = false;\r\n            };\r\n            RectTileLayer.prototype.renderCanvas = function (renderer) {\r\n                if (this.textures.length === 0)\r\n                    return;\r\n                var points = this.pointsBuf;\r\n                renderer.context.fillStyle = '#000000';\r\n                for (var i = 0, n = points.length; i < n; i += 9) {\r\n                    var x1 = points[i], y1 = points[i + 1];\r\n                    var x2 = points[i + 2], y2 = points[i + 3];\r\n                    var w = points[i + 4];\r\n                    var h = points[i + 5];\r\n                    x1 += points[i + 6] * renderer.plugins.tilemap.tileAnim[0];\r\n                    y1 += points[i + 7] * renderer.plugins.tilemap.tileAnim[1];\r\n                    var textureId = points[i + 8];\r\n                    if (textureId >= 0) {\r\n                        renderer.context.drawImage(this.textures[textureId].baseTexture.source, x1, y1, w, h, x2, y2, w, h);\r\n                    }\r\n                    else {\r\n                        renderer.context.globalAlpha = 0.5;\r\n                        renderer.context.fillRect(x2, y2, w, h);\r\n                        renderer.context.globalAlpha = 1;\r\n                    }\r\n                }\r\n            };\r\n            RectTileLayer.prototype.addRect = function (textureId, u, v, x, y, tileWidth, tileHeight, animX, animY) {\r\n                if (animX === void 0) { animX = 0; }\r\n                if (animY === void 0) { animY = 0; }\r\n                var pb = this.pointsBuf;\r\n                this.hasAnim = this.hasAnim || animX > 0 || animY > 0;\r\n                if (tileWidth == tileHeight) {\r\n                    pb.push(u);\r\n                    pb.push(v);\r\n                    pb.push(x);\r\n                    pb.push(y);\r\n                    pb.push(tileWidth);\r\n                    pb.push(tileHeight);\r\n                    pb.push(animX | 0);\r\n                    pb.push(animY | 0);\r\n                    pb.push(textureId);\r\n                }\r\n                else {\r\n                    var i;\r\n                    if (tileWidth % tileHeight === 0) {\r\n                        for (i = 0; i < tileWidth / tileHeight; i++) {\r\n                            pb.push(u + i * tileHeight);\r\n                            pb.push(v);\r\n                            pb.push(x + i * tileHeight);\r\n                            pb.push(y);\r\n                            pb.push(tileHeight);\r\n                            pb.push(tileHeight);\r\n                            pb.push(animX | 0);\r\n                            pb.push(animY | 0);\r\n                            pb.push(textureId);\r\n                        }\r\n                    }\r\n                    else if (tileHeight % tileWidth === 0) {\r\n                        for (i = 0; i < tileHeight / tileWidth; i++) {\r\n                            pb.push(u);\r\n                            pb.push(v + i * tileWidth);\r\n                            pb.push(x);\r\n                            pb.push(y + i * tileWidth);\r\n                            pb.push(tileWidth);\r\n                            pb.push(tileWidth);\r\n                            pb.push(animX | 0);\r\n                            pb.push(animY | 0);\r\n                            pb.push(textureId);\r\n                        }\r\n                    }\r\n                    else {\r\n                        pb.push(u);\r\n                        pb.push(v);\r\n                        pb.push(x);\r\n                        pb.push(y);\r\n                        pb.push(tileWidth);\r\n                        pb.push(tileHeight);\r\n                        pb.push(animX | 0);\r\n                        pb.push(animY | 0);\r\n                        pb.push(textureId);\r\n                    }\r\n                }\r\n            };\r\n            ;\r\n            RectTileLayer.prototype.renderWebGL = function (renderer, useSquare) {\r\n                if (useSquare === void 0) { useSquare = false; }\r\n                var points = this.pointsBuf;\r\n                if (points.length === 0)\r\n                    return;\r\n                var rectsCount = points.length / 9;\r\n                var tile = renderer.plugins.tilemap;\r\n                var gl = renderer.gl;\r\n                if (!useSquare) {\r\n                    tile.checkIndexBuffer(rectsCount);\r\n                }\r\n                var shader = tile.getShader(useSquare);\r\n                var textures = this.textures;\r\n                if (textures.length === 0)\r\n                    return;\r\n                var len = textures.length;\r\n                if (this._tempTexSize < shader.maxTextures) {\r\n                    this._tempTexSize = shader.maxTextures;\r\n                    this._tempSize = new Float32Array(2 * shader.maxTextures);\r\n                }\r\n                for (var i = 0; i < len; i++) {\r\n                    if (!textures[i] || !textures[i].valid)\r\n                        return;\r\n                    var texture = textures[i].baseTexture;\r\n                }\r\n                tile.bindTextures(renderer, shader, textures);\r\n                var vb = tile.getVb(this.vbId);\r\n                if (!vb) {\r\n                    vb = tile.createVb(useSquare);\r\n                    this.vbId = vb.id;\r\n                    this.vbBuffer = null;\r\n                    this.modificationMarker = 0;\r\n                }\r\n                var vao = vb.vao;\r\n                renderer.bindVao(vao);\r\n                var vertexBuf = vb.vb;\r\n                vertexBuf.bind();\r\n                var vertices = rectsCount * shader.vertPerQuad;\r\n                if (vertices === 0)\r\n                    return;\r\n                if (this.modificationMarker != vertices) {\r\n                    this.modificationMarker = vertices;\r\n                    var vs = shader.stride * vertices;\r\n                    if (!this.vbBuffer || this.vbBuffer.byteLength < vs) {\r\n                        var bk = shader.stride;\r\n                        while (bk < vs) {\r\n                            bk *= 2;\r\n                        }\r\n                        this.vbBuffer = new ArrayBuffer(bk);\r\n                        this.vbArray = new Float32Array(this.vbBuffer);\r\n                        this.vbInts = new Uint32Array(this.vbBuffer);\r\n                        vertexBuf.upload(this.vbBuffer, 0, true);\r\n                    }\r\n                    var arr = this.vbArray, ints = this.vbInts;\r\n                    var sz = 0;\r\n                    var textureId, shiftU, shiftV;\r\n                    if (useSquare) {\r\n                        for (i = 0; i < points.length; i += 9) {\r\n                            textureId = (points[i + 8] >> 2);\r\n                            shiftU = 1024 * (points[i + 8] & 1);\r\n                            shiftV = 1024 * ((points[i + 8] >> 1) & 1);\r\n                            arr[sz++] = points[i + 2];\r\n                            arr[sz++] = points[i + 3];\r\n                            arr[sz++] = points[i + 0] + shiftU;\r\n                            arr[sz++] = points[i + 1] + shiftV;\r\n                            arr[sz++] = points[i + 4];\r\n                            arr[sz++] = points[i + 6];\r\n                            arr[sz++] = points[i + 7];\r\n                            arr[sz++] = textureId;\r\n                        }\r\n                    }\r\n                    else {\r\n                        var tint = -1;\r\n                        for (i = 0; i < points.length; i += 9) {\r\n                            var eps = 0.5;\r\n                            textureId = (points[i + 8] >> 2);\r\n                            shiftU = 1024 * (points[i + 8] & 1);\r\n                            shiftV = 1024 * ((points[i + 8] >> 1) & 1);\r\n                            var x = points[i + 2], y = points[i + 3];\r\n                            var w = points[i + 4], h = points[i + 5];\r\n                            var u = points[i] + shiftU, v = points[i + 1] + shiftV;\r\n                            var animX = points[i + 6], animY = points[i + 7];\r\n                            arr[sz++] = x;\r\n                            arr[sz++] = y;\r\n                            arr[sz++] = u;\r\n                            arr[sz++] = v;\r\n                            arr[sz++] = u + eps;\r\n                            arr[sz++] = v + eps;\r\n                            arr[sz++] = u + w - eps;\r\n                            arr[sz++] = v + h - eps;\r\n                            arr[sz++] = animX;\r\n                            arr[sz++] = animY;\r\n                            arr[sz++] = textureId;\r\n                            arr[sz++] = x + w;\r\n                            arr[sz++] = y;\r\n                            arr[sz++] = u + w;\r\n                            arr[sz++] = v;\r\n                            arr[sz++] = u + eps;\r\n                            arr[sz++] = v + eps;\r\n                            arr[sz++] = u + w - eps;\r\n                            arr[sz++] = v + h - eps;\r\n                            arr[sz++] = animX;\r\n                            arr[sz++] = animY;\r\n                            arr[sz++] = textureId;\r\n                            arr[sz++] = x + w;\r\n                            arr[sz++] = y + h;\r\n                            arr[sz++] = u + w;\r\n                            arr[sz++] = v + h;\r\n                            arr[sz++] = u + eps;\r\n                            arr[sz++] = v + eps;\r\n                            arr[sz++] = u + w - eps;\r\n                            arr[sz++] = v + h - eps;\r\n                            arr[sz++] = animX;\r\n                            arr[sz++] = animY;\r\n                            arr[sz++] = textureId;\r\n                            arr[sz++] = x;\r\n                            arr[sz++] = y + h;\r\n                            arr[sz++] = u;\r\n                            arr[sz++] = v + h;\r\n                            arr[sz++] = u + eps;\r\n                            arr[sz++] = v + eps;\r\n                            arr[sz++] = u + w - eps;\r\n                            arr[sz++] = v + h - eps;\r\n                            arr[sz++] = animX;\r\n                            arr[sz++] = animY;\r\n                            arr[sz++] = textureId;\r\n                        }\r\n                    }\r\n                    vertexBuf.upload(arr, 0, true);\r\n                }\r\n                if (useSquare)\r\n                    gl.drawArrays(gl.POINTS, 0, vertices);\r\n                else\r\n                    gl.drawElements(gl.TRIANGLES, rectsCount * 6, gl.UNSIGNED_SHORT, 0);\r\n            };\r\n            return RectTileLayer;\r\n        }(PIXI.Container));\r\n        tilemap.RectTileLayer = RectTileLayer;\r\n    })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\r\n})(PIXI || (PIXI = {}));\r\nvar PIXI;\r\n(function (PIXI) {\r\n    var tilemap;\r\n    (function (tilemap) {\r\n        var rectShaderFrag = \"varying vec2 vTextureCoord;\\nvarying vec4 vFrame;\\nvarying float vTextureId;\\nuniform vec4 shadowColor;\\nuniform sampler2D uSamplers[%count%];\\nuniform vec2 uSamplerSize[%count%];\\n\\nvoid main(void){\\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\\n   float textureId = floor(vTextureId + 0.5);\\n\\n   vec4 color;\\n   %forloop%\\n   gl_FragColor = color;\\n}\";\r\n        var rectShaderVert = \"\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aFrame;\\nattribute vec2 aAnim;\\nattribute float aTextureId;\\n\\nuniform mat3 projectionMatrix;\\nuniform vec2 animationFrame;\\n\\nvarying vec2 vTextureCoord;\\nvarying float vTextureId;\\nvarying vec4 vFrame;\\n\\nvoid main(void){\\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n   vec2 anim = aAnim * animationFrame;\\n   vTextureCoord = aTextureCoord + anim;\\n   vFrame = aFrame + vec4(anim, anim);\\n   vTextureId = aTextureId;\\n}\\n\";\r\n        var TilemapShader = (function (_super) {\r\n            __extends(TilemapShader, _super);\r\n            function TilemapShader(gl, maxTextures, shaderVert, shaderFrag) {\r\n                var _this = _super.call(this, gl, shaderVert, shaderFrag) || this;\r\n                _this.maxTextures = 0;\r\n                _this.maxTextures = maxTextures;\r\n                tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\r\n                return _this;\r\n            }\r\n            return TilemapShader;\r\n        }(PIXI.Shader));\r\n        tilemap.TilemapShader = TilemapShader;\r\n        var RectTileShader = (function (_super) {\r\n            __extends(RectTileShader, _super);\r\n            function RectTileShader(gl, maxTextures) {\r\n                var _this = _super.call(this, gl, maxTextures, rectShaderVert, tilemap.shaderGenerator.generateFragmentSrc(maxTextures, rectShaderFrag)) || this;\r\n                _this.vertSize = 11;\r\n                _this.vertPerQuad = 4;\r\n                _this.stride = _this.vertSize * 4;\r\n                tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\r\n                return _this;\r\n            }\r\n            RectTileShader.prototype.createVao = function (renderer, vb) {\r\n                var gl = renderer.gl;\r\n                return renderer.createVao()\r\n                    .addIndex(this.indexBuffer)\r\n                    .addAttribute(vb, this.attributes.aVertexPosition, gl.FLOAT, false, this.stride, 0)\r\n                    .addAttribute(vb, this.attributes.aTextureCoord, gl.FLOAT, false, this.stride, 2 * 4)\r\n                    .addAttribute(vb, this.attributes.aFrame, gl.FLOAT, false, this.stride, 4 * 4)\r\n                    .addAttribute(vb, this.attributes.aAnim, gl.FLOAT, false, this.stride, 8 * 4)\r\n                    .addAttribute(vb, this.attributes.aTextureId, gl.FLOAT, false, this.stride, 10 * 4);\r\n            };\r\n            return RectTileShader;\r\n        }(TilemapShader));\r\n        tilemap.RectTileShader = RectTileShader;\r\n    })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\r\n})(PIXI || (PIXI = {}));\r\nvar PIXI;\r\n(function (PIXI) {\r\n    var tilemap;\r\n    (function (tilemap) {\r\n        var shaderGenerator;\r\n        (function (shaderGenerator) {\r\n            function fillSamplers(shader, maxTextures) {\r\n                var sampleValues = [];\r\n                for (var i = 0; i < maxTextures; i++) {\r\n                    sampleValues[i] = i;\r\n                }\r\n                shader.bind();\r\n                shader.uniforms.uSamplers = sampleValues;\r\n                var samplerSize = [];\r\n                for (i = 0; i < maxTextures; i++) {\r\n                    samplerSize.push(1.0 / 2048);\r\n                    samplerSize.push(1.0 / 2048);\r\n                }\r\n                shader.uniforms.uSamplerSize = samplerSize;\r\n            }\r\n            shaderGenerator.fillSamplers = fillSamplers;\r\n            function generateFragmentSrc(maxTextures, fragmentSrc) {\r\n                return fragmentSrc.replace(/%count%/gi, maxTextures + \"\")\r\n                    .replace(/%forloop%/gi, this.generateSampleSrc(maxTextures));\r\n            }\r\n            shaderGenerator.generateFragmentSrc = generateFragmentSrc;\r\n            function generateSampleSrc(maxTextures) {\r\n                var src = '';\r\n                src += '\\n';\r\n                src += '\\n';\r\n                src += 'if(vTextureId <= -1.0) {';\r\n                src += '\\n\\tcolor = shadowColor;';\r\n                src += '\\n}';\r\n                for (var i = 0; i < maxTextures; i++) {\r\n                    src += '\\nelse ';\r\n                    if (i < maxTextures - 1) {\r\n                        src += 'if(textureId == ' + i + '.0)';\r\n                    }\r\n                    src += '\\n{';\r\n                    src += '\\n\\tcolor = texture2D(uSamplers[' + i + '], textureCoord * uSamplerSize[' + i + ']);';\r\n                    src += '\\n}';\r\n                }\r\n                src += '\\n';\r\n                src += '\\n';\r\n                return src;\r\n            }\r\n            shaderGenerator.generateSampleSrc = generateSampleSrc;\r\n        })(shaderGenerator = tilemap.shaderGenerator || (tilemap.shaderGenerator = {}));\r\n    })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\r\n})(PIXI || (PIXI = {}));\r\nvar PIXI;\r\n(function (PIXI) {\r\n    var tilemap;\r\n    (function (tilemap) {\r\n        var squareShaderVert = \"\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec2 aAnim;\\nattribute float aTextureId;\\nattribute float aSize;\\n\\nuniform mat3 projectionMatrix;\\nuniform vec2 samplerSize;\\nuniform vec2 animationFrame;\\nuniform float projectionScale;\\n\\nvarying vec2 vTextureCoord;\\nvarying float vSize;\\nvarying float vTextureId;\\n\\nvoid main(void){\\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition + aSize * 0.5, 1.0)).xy, 0.0, 1.0);\\n   gl_PointSize = aSize * projectionScale;\\n   vTextureCoord = aTextureCoord + aAnim * animationFrame;\\n   vTextureId = aTextureId;\\n   vSize = aSize;\\n}\\n\";\r\n        var squareShaderFrag = \"\\nvarying vec2 vTextureCoord;\\nvarying float vSize;\\nvarying float vTextureId;\\n\\nuniform vec4 shadowColor;\\nuniform sampler2D uSamplers[%count%];\\nuniform vec2 uSamplerSize[%count%];\\nuniform vec2 pointScale;\\n\\nvoid main(void){\\n   float margin = 0.5 / vSize;\\n   vec2 pointCoord = (gl_PointCoord - 0.5) * pointScale + 0.5;\\n   vec2 clamped = vec2(clamp(pointCoord.x, margin, 1.0 - margin), clamp(pointCoord.y, margin, 1.0 - margin));\\n   vec2 textureCoord = pointCoord * vSize + vTextureCoord;\\n   float textureId = vTextureId;\\n   vec4 color;\\n   %forloop%\\n   gl_FragColor = color;\\n}\\n\\n\";\r\n        var SquareTileShader = (function (_super) {\r\n            __extends(SquareTileShader, _super);\r\n            function SquareTileShader(gl, maxTextures) {\r\n                var _this = _super.call(this, gl, maxTextures, squareShaderVert, tilemap.shaderGenerator.generateFragmentSrc(maxTextures, squareShaderFrag)) || this;\r\n                _this.vertSize = 8;\r\n                _this.vertPerQuad = 1;\r\n                _this.stride = _this.vertSize * 4;\r\n                _this.maxTextures = maxTextures;\r\n                tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\r\n                return _this;\r\n            }\r\n            SquareTileShader.prototype.createVao = function (renderer, vb) {\r\n                var gl = renderer.gl;\r\n                return renderer.createVao()\r\n                    .addIndex(this.indexBuffer)\r\n                    .addAttribute(vb, this.attributes.aVertexPosition, gl.FLOAT, false, this.stride, 0)\r\n                    .addAttribute(vb, this.attributes.aTextureCoord, gl.FLOAT, false, this.stride, 2 * 4)\r\n                    .addAttribute(vb, this.attributes.aSize, gl.FLOAT, false, this.stride, 4 * 4)\r\n                    .addAttribute(vb, this.attributes.aAnim, gl.FLOAT, false, this.stride, 5 * 4)\r\n                    .addAttribute(vb, this.attributes.aTextureId, gl.FLOAT, false, this.stride, 7 * 4);\r\n            };\r\n            ;\r\n            return SquareTileShader;\r\n        }(tilemap.TilemapShader));\r\n        tilemap.SquareTileShader = SquareTileShader;\r\n    })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\r\n})(PIXI || (PIXI = {}));\r\nvar PIXI;\r\n(function (PIXI) {\r\n    var tilemap;\r\n    (function (tilemap) {\r\n        var glCore = PIXI.glCore;\r\n        function _hackSubImage(tex, sprite, clearBuffer, clearWidth, clearHeight) {\r\n            var gl = tex.gl;\r\n            var baseTex = sprite.texture.baseTexture;\r\n            if (clearBuffer && clearWidth > 0 && clearHeight > 0) {\r\n                gl.texSubImage2D(gl.TEXTURE_2D, 0, sprite.position.x, sprite.position.y, clearWidth, clearHeight, tex.format, tex.type, clearBuffer);\r\n            }\r\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\r\n            gl.texSubImage2D(gl.TEXTURE_2D, 0, sprite.position.x, sprite.position.y, tex.format, tex.type, baseTex.source);\r\n        }\r\n        var TileRenderer = (function (_super) {\r\n            __extends(TileRenderer, _super);\r\n            function TileRenderer(renderer) {\r\n                var _this = _super.call(this, renderer) || this;\r\n                _this.vbs = {};\r\n                _this.indices = new Uint16Array(0);\r\n                _this.lastTimeCheck = 0;\r\n                _this.tileAnim = [0, 0];\r\n                _this.maxTextures = 4;\r\n                _this.texLoc = [];\r\n                return _this;\r\n            }\r\n            TileRenderer.prototype.onContextChange = function () {\r\n                var gl = this.renderer.gl;\r\n                var maxTextures = this.maxTextures;\r\n                this.rectShader = new tilemap.RectTileShader(gl, maxTextures);\r\n                this.squareShader = new tilemap.SquareTileShader(gl, maxTextures);\r\n                this.checkIndexBuffer(2000);\r\n                this.rectShader.indexBuffer = this.indexBuffer;\r\n                this.squareShader.indexBuffer = this.indexBuffer;\r\n                this.vbs = {};\r\n                this.glTextures = [];\r\n                this.boundSprites = [];\r\n                this.initBounds();\r\n            };\r\n            TileRenderer.prototype.initBounds = function () {\r\n                var gl = this.renderer.gl;\r\n                var tempCanvas = document.createElement('canvas');\r\n                tempCanvas.width = 2048;\r\n                tempCanvas.height = 2048;\r\n                for (var i = 0; i < this.maxTextures; i++) {\r\n                    var rt = PIXI.RenderTexture.create(2048, 2048);\r\n                    rt.baseTexture.premultipliedAlpha = true;\r\n                    rt.baseTexture.scaleMode = TileRenderer.SCALE_MODE;\r\n                    rt.baseTexture.wrapMode = PIXI.WRAP_MODES.CLAMP;\r\n                    this.renderer.textureManager.updateTexture(rt);\r\n                    this.glTextures.push(rt);\r\n                    var bs = [];\r\n                    for (var j = 0; j < 4; j++) {\r\n                        var spr = new PIXI.Sprite();\r\n                        spr.position.x = 1024 * (j & 1);\r\n                        spr.position.y = 1024 * (j >> 1);\r\n                        bs.push(spr);\r\n                    }\r\n                    this.boundSprites.push(bs);\r\n                }\r\n            };\r\n            TileRenderer.prototype.bindTextures = function (renderer, shader, textures) {\r\n                var bounds = this.boundSprites;\r\n                var glts = this.glTextures;\r\n                var len = textures.length;\r\n                var maxTextures = this.maxTextures;\r\n                if (len > 4 * maxTextures) {\r\n                    return;\r\n                }\r\n                var doClear = TileRenderer.DO_CLEAR;\r\n                if (doClear && !this._clearBuffer) {\r\n                    this._clearBuffer = new Uint8Array(1024 * 1024 * 4);\r\n                }\r\n                var i;\r\n                for (i = 0; i < len; i++) {\r\n                    var texture = textures[i];\r\n                    if (!texture || !textures[i].valid)\r\n                        continue;\r\n                    var bs = bounds[i >> 2][i & 3];\r\n                    if (!bs.texture ||\r\n                        bs.texture.baseTexture !== texture.baseTexture) {\r\n                        bs.texture = texture;\r\n                        var glt = glts[i >> 2];\r\n                        renderer.bindTexture(glt, 0, true);\r\n                        if (doClear) {\r\n                            _hackSubImage(glt.baseTexture._glTextures[renderer.CONTEXT_UID], bs, this._clearBuffer, 1024, 1024);\r\n                        }\r\n                        else {\r\n                            _hackSubImage(glt.baseTexture._glTextures[renderer.CONTEXT_UID], bs);\r\n                        }\r\n                    }\r\n                }\r\n                this.texLoc.length = 0;\r\n                for (i = 0; i < maxTextures; i++) {\r\n                    this.texLoc.push(renderer.bindTexture(glts[i], i, true));\r\n                }\r\n                shader.uniforms.uSamplers = this.texLoc;\r\n            };\r\n            TileRenderer.prototype.checkLeaks = function () {\r\n                var now = Date.now();\r\n                var old = now - 10000;\r\n                if (this.lastTimeCheck < old ||\r\n                    this.lastTimeCheck > now) {\r\n                    this.lastTimeCheck = now;\r\n                    var vbs = this.vbs;\r\n                    for (var key in vbs) {\r\n                        if (vbs[key].lastTimeAccess < old) {\r\n                            this.removeVb(key);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            ;\r\n            TileRenderer.prototype.start = function () {\r\n                this.renderer.state.setBlendMode(PIXI.BLEND_MODES.NORMAL);\r\n            };\r\n            TileRenderer.prototype.getVb = function (id) {\r\n                this.checkLeaks();\r\n                var vb = this.vbs[id];\r\n                if (vb) {\r\n                    vb.lastAccessTime = Date.now();\r\n                    return vb;\r\n                }\r\n                return null;\r\n            };\r\n            TileRenderer.prototype.createVb = function (useSquare) {\r\n                var id = ++TileRenderer.vbAutoincrement;\r\n                var shader = this.getShader(useSquare);\r\n                var gl = this.renderer.gl;\r\n                var vb = PIXI.glCore.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\r\n                var stuff = {\r\n                    id: id,\r\n                    vb: vb,\r\n                    vao: shader.createVao(this.renderer, vb),\r\n                    lastTimeAccess: Date.now(),\r\n                    useSquare: useSquare,\r\n                    shader: shader\r\n                };\r\n                this.vbs[id] = stuff;\r\n                return stuff;\r\n            };\r\n            TileRenderer.prototype.removeVb = function (id) {\r\n                if (this.vbs[id]) {\r\n                    this.vbs[id].vb.destroy();\r\n                    this.vbs[id].vao.destroy();\r\n                    delete this.vbs[id];\r\n                }\r\n            };\r\n            TileRenderer.prototype.checkIndexBuffer = function (size) {\r\n                var totalIndices = size * 6;\r\n                var indices = this.indices;\r\n                if (totalIndices <= indices.length) {\r\n                    return;\r\n                }\r\n                var len = indices.length || totalIndices;\r\n                while (len < totalIndices) {\r\n                    len <<= 1;\r\n                }\r\n                indices = new Uint16Array(len);\r\n                this.indices = indices;\r\n                for (var i = 0, j = 0; i + 5 < indices.length; i += 6, j += 4) {\r\n                    indices[i + 0] = j + 0;\r\n                    indices[i + 1] = j + 1;\r\n                    indices[i + 2] = j + 2;\r\n                    indices[i + 3] = j + 0;\r\n                    indices[i + 4] = j + 2;\r\n                    indices[i + 5] = j + 3;\r\n                }\r\n                if (this.indexBuffer) {\r\n                    this.indexBuffer.upload(indices);\r\n                }\r\n                else {\r\n                    var gl = this.renderer.gl;\r\n                    this.indexBuffer = glCore.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\r\n                }\r\n            };\r\n            TileRenderer.prototype.getShader = function (useSquare) {\r\n                return useSquare ? this.squareShader : this.rectShader;\r\n            };\r\n            TileRenderer.prototype.destroy = function () {\r\n                _super.prototype.destroy.call(this);\r\n                this.rectShader.destroy();\r\n                this.squareShader.destroy();\r\n                this.rectShader = null;\r\n                this.squareShader = null;\r\n            };\r\n            ;\r\n            return TileRenderer;\r\n        }(PIXI.ObjectRenderer));\r\n        TileRenderer.vbAutoincrement = 0;\r\n        TileRenderer.SCALE_MODE = PIXI.SCALE_MODES.LINEAR;\r\n        TileRenderer.DO_CLEAR = false;\r\n        tilemap.TileRenderer = TileRenderer;\r\n        PIXI.WebGLRenderer.registerPlugin('tilemap', TileRenderer);\r\n    })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\r\n})(PIXI || (PIXI = {}));\r\nvar PIXI;\r\n(function (PIXI) {\r\n    var tilemap;\r\n    (function (tilemap_1) {\r\n        var ZLayer = (function (_super) {\r\n            __extends(ZLayer, _super);\r\n            function ZLayer(tilemap, zIndex) {\r\n                var _this = _super.call(this) || this;\r\n                _this._lastAnimationFrame = -1;\r\n                _this.tilemap = tilemap;\r\n                _this.z = zIndex;\r\n                return _this;\r\n            }\r\n            ZLayer.prototype.clear = function () {\r\n                var layers = this.children;\r\n                for (var i = 0; i < layers.length; i++)\r\n                    layers[i].clear();\r\n                this._previousLayers = 0;\r\n            };\r\n            ZLayer.prototype.cacheIfDirty = function () {\r\n                var tilemap = this.tilemap;\r\n                var layers = this.children;\r\n                var modified = this._previousLayers != layers.length;\r\n                this._previousLayers = layers.length;\r\n                var buf = this.canvasBuffer;\r\n                var tempRender = this._tempRender;\r\n                if (!buf) {\r\n                    buf = this.canvasBuffer = document.createElement('canvas');\r\n                    tempRender = this._tempRender = new PIXI.CanvasRenderer(100, 100, { view: buf });\r\n                    tempRender.context = tempRender.rootContext;\r\n                    tempRender.plugins.tilemap.dontUseTransform = true;\r\n                }\r\n                if (buf.width != tilemap._layerWidth ||\r\n                    buf.height != tilemap._layerHeight) {\r\n                    buf.width = tilemap._layerWidth;\r\n                    buf.height = tilemap._layerHeight;\r\n                    modified = true;\r\n                }\r\n                var i;\r\n                if (!modified) {\r\n                    for (i = 0; i < layers.length; i++) {\r\n                        if (layers[i].isModified(this._lastAnimationFrame != tilemap.animationFrame)) {\r\n                            modified = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                this._lastAnimationFrame = tilemap.animationFrame;\r\n                if (modified) {\r\n                    if (tilemap._hackRenderer) {\r\n                        tilemap._hackRenderer(tempRender);\r\n                    }\r\n                    tempRender.context.clearRect(0, 0, buf.width, buf.height);\r\n                    for (i = 0; i < layers.length; i++) {\r\n                        layers[i].clearModify();\r\n                        layers[i].renderCanvas(tempRender);\r\n                    }\r\n                }\r\n                this.layerTransform = this.worldTransform;\r\n                for (i = 0; i < layers.length; i++) {\r\n                    this.layerTransform = layers[i].worldTransform;\r\n                    break;\r\n                }\r\n            };\r\n            ;\r\n            ZLayer.prototype.renderCanvas = function (renderer) {\r\n                this.cacheIfDirty();\r\n                var wt = this.layerTransform;\r\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\r\n                var tilemap = this.tilemap;\r\n                renderer.context.drawImage(this.canvasBuffer, 0, 0);\r\n            };\r\n            ;\r\n            return ZLayer;\r\n        }(PIXI.Container));\r\n        tilemap_1.ZLayer = ZLayer;\r\n    })(tilemap = PIXI.tilemap || (PIXI.tilemap = {}));\r\n})(PIXI || (PIXI = {}));\r\n//# sourceMappingURL=pixi-tilemap.js.map"]},"metadata":{},"sourceType":"script"}